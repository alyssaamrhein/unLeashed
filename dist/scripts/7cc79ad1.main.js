!function(){window.Unleashed=Ember.Application.create();Ember.FEATURES["ember-routing-drop-deprecated-action-style"]=!0}(),function(){Unleashed.ApplicationController=Ember.ObjectController.extend({userLocation:null,coords:function(){return this.get("userLocation")?this.get("userLocation").coords.latitude+", "+this.get("userLocation").coords.longitude:void 0}.property("userLocation"),actions:{location:function(){{var a=this;navigator.geolocation.getCurrentPosition(function(b){console.log(b),a.set("userLocation",b)})}}}})}(),function(){Unleashed.ParkNewCommentController=Ember.Controller.extend({needs:["park"],actions:{saveComment:function(){if(this.get("text")){var a=this.store.createRecord("comment",{commenter:this.get("commenter"),date:(new Date).toString(),text:this.get("text")});a.save();var b=this.get("controllers.park.model");console.log(a),b.get("comments").pushObject(a),b.save(),this.transitionToRoute("park")}}}})}(),function(){Unleashed.IndexController=Ember.Controller.extend({needs:["application"],name:"You Are Here",latitude:function(){var a=this.get("controllers.application").userLocation;return a&&a.coords?a.coords.latitude:void 0}.property("controllers.application.userLocation"),longitude:function(){var a=this.get("controllers.application").userLocation;return console.log(a.coords),a&&a.coords?a.coords.longitude:void 0}.property("controllers.application.userLocation"),markers:function(){var a=this.get("model").map(function(a){var b=a.get("location").split(",");return Ember.Object.create({latitude:b[0],longitude:b[1],name:a.get("name"),center:b[1],parkID:a.get("id")})});return console.log(a),[Ember.Object.create(this.getProperties("latitude","longitude","name"))].concat(a)}.property("latitude","longitude")})}(),function(){Unleashed.ParkCheckinController=Ember.Controller.extend({needs:["park"],actions:{checkIn:function(){var a=this.store.createRecord("checkin",{userName:this.get("userName"),date:new Date});a.save();var b=this.get("controllers.park.model");console.log(a),b.get("checkins").pushObject(a),b.save(),this.transitionToRoute("park")}}})}(),function(){Unleashed.ParkController=Ember.ObjectController.extend({deleteMode:!1,stars:function(){return 0==this.get("rating")?[]:1==this.get("rating")?[1]:2==this.get("rating")?[1,2]:3==this.get("rating")?[1,2,3]:4==this.get("rating")?[1,2,3,4]:5==this.get("rating")?[1,2,3,4,5]:[]}.property("rating"),actions:{"delete":function(){this.toggleProperty("deleteMode")},cancelDelete:function(){this.set("deleteMode",!1)},confirmDelete:function(){this.get("model").deleteRecord(),this.get("model").save(),this.transitionToRoute("parks"),this.set("deleteMode",!1)},edit:function(){this.transitionToRoute("park.edit")}}})}(),function(){Unleashed.ParkEditController=Ember.ObjectController.extend({needs:["park"],actions:{editPark:function(){this.get("model").save(),this.transitionToRoute("parks")}}})}(),function(){Unleashed.ParksNewParkController=Ember.ArrayController.extend({needs:["application"],location:function(){var a=this.get("controllers.application").coords;return console.log(a),a}.property("controllers.application.coords"),actions:{createPark:function(){var a=this.getProperties("name","imgUrl","description","location","rating"),b=this.store.createRecord("park",a);b.save(),this.transitionToRoute("park")},setRating:function(a){this.set("rating",a)}}})}(),function(){Unleashed.ParksController=Ember.ArrayController.extend({parksCount:function(){return this.get("model.length")}.property("@each")})}(),function(){Unleashed.UserController=Ember.ObjectController.extend({})}(),function(){Unleashed.UserEditController=Ember.ObjectController.extend({needs:["user"],actions:{save:function(){self=this,this.get("buffer").forEach(function(a){self.get("controllers.user.model").set(a.key,a.value)}),this.transitionToRoute("user",this.get("model"))}}})}(),function(){Unleashed.NewUserController=Ember.Controller.extend({actions:{createUser:function(){var a=this.getProperties("userName","userImgUrl","breed"),b=this.store.createRecord("user",a);b.save(),this.transitionToRoute("users")}}})}(),function(){Unleashed.UsersController=Ember.ArrayController.extend({})}(),function(){Unleashed.ApplicationAdapter=DS.FirebaseAdapter.extend({firebase:new Firebase("https://unleash.firebaseio.com/")})}(),function(){Unleashed.Checkin=DS.Model.extend({userName:DS.attr("string"),date:DS.attr("string")})}(),function(){Unleashed.Comment=DS.Model.extend({commenter:DS.attr("string"),date:DS.attr("string"),text:DS.attr("string")})}(),function(){Unleashed.New=DS.Model.extend({name:DS.attr("string"),imgUrl:DS.attr("string"),description:DS.attr("string"),rating:DS.attr("number")})}(),function(){Unleashed.NewUser=DS.Model.extend({userName:DS.attr("string"),userImgUrl:DS.attr("string"),breed:DS.attr("string")})}(),function(){Unleashed.Park=DS.Model.extend({name:DS.attr("string"),imgUrl:DS.attr("string"),location:DS.attr("string"),description:DS.attr("string"),rating:DS.attr("number"),checkins:DS.hasMany("checkin",{async:!0}),comments:DS.hasMany("comment",{async:!0})}),Unleashed.Park.reopen({attributes:function(){var a=this;return Ember.keys(this.get("data")).map(function(b){return Em.Object.create({model:a,key:b,valueBinding:"model."+b})})}.property()})}(),function(){Unleashed.UserEdit=DS.Model.extend({})}(),function(){Unleashed.User=DS.Model.extend({userName:DS.attr("string"),userImgUrl:DS.attr("string"),breed:DS.attr("string")})}(),function(){Unleashed.ApplicationRoute=Ember.Route.extend({beforeModel:function(){var a=this.controllerFor("application");a.get("userLocation")||a.send("location")}})}(),function(){Unleashed.IndexRoute=Ember.Route.extend({model:function(){return this.store.find("park")}})}(),function(){Unleashed.ParkEditRoute=Ember.Route.extend({model:function(){return this.get("store").find("park",this.modelFor("park").id)},setupController:function(a,b){a.set("model",b),buffer=b.get("attributes").map(function(a){return{key:a.get("key"),value:a.get("value")}}),a.set("buffer",buffer)}})}(),function(){Unleashed.ParkIndexRoute=Ember.Route.extend({model:function(a){console.log(a)}})}(),function(){Unleashed.ParkRoute=Ember.Route.extend({model:function(a){return console.log(a),this.store.find("park",a.id)}})}(),function(){Unleashed.ParksNewParkRoute=Ember.Route.extend({model:function(){return this.get("store").find("new")}})}(),function(){Unleashed.ParksRoute=Ember.Route.extend({model:function(){return this.store.findAll("park")}})}(),function(){Unleashed.UserEditRoute=Ember.Route.extend({model:function(){return this.get("store").find("user",this.modelFor("user").id)},setupController:function(a,b){a.set("model",b),buffer=b.get("attributes").map(function(a){return{key:a.get("key"),value:a.get("value")}}),a.set("buffer",buffer)}})}(),function(){Unleashed.UserNewUserRoute=Ember.Route.extend({})}(),function(){Unleashed.UserRoute=Ember.Route.extend({model:function(a){return this.store.find("user",a.id)}})}(),function(){Unleashed.UsersRoute=Ember.Route.extend({model:function(){return this.get("store").find("user")}})}(),function(){Unleashed.GoogleMapsComponent=Ember.Component.extend({insertMap:function(){var a=this.$(".map-canvas"),b={center:new google.maps.LatLng(this.get("latitude"),this.get("longitude")),zoom:17,mapTypeId:google.maps.MapTypeId.ROADMAP},c=new google.maps.Map(a[0],b);this.set("map",c),this.generatePin()}.on("didInsertElement"),onMarkerChange:function(){this.generatePin()}.observes("markers"),generatePin:function(){var a=this.get("markers"),b=this.get("map");a.forEach(function(a){var c=new google.maps.LatLng(a.get("latitude"),a.get("longitude")),d='<div id="content"><h3><a href="/#/parks/'+a.get("parkID")+'">'+a.get("name")+"</a></h3></div>",e=new google.maps.InfoWindow({content:d}),a=new google.maps.Marker({position:c,map:b,animation:google.maps.Animation.DROP,title:a.get("name")});google.maps.event.addListener(a,"click",function(){e.open(b,a)})})}})}(),function(){Unleashed.ParkEditView=Ember.View.extend({})}(),function(){Unleashed.ParkView=Ember.View.extend({})}(),function(){Unleashed.ParksView=Ember.View.extend({})}(),function(){Unleashed.UserEditView=Ember.View.extend({})}(),function(){Unleashed.UserView=Ember.View.extend({})}(),function(){Unleashed.UsersView=Ember.View.extend({})}(),function(){Unleashed.Router.map(function(){this.resource("parks",function(){this.route("new_park")}),this.resource("park",{path:"parks/:id"},function(){this.route("edit"),this.route("new_comment"),this.route("checkin")}),this.resource("users"),this.resource("user",{path:"/:id"},function(){this.route("edit_user")}),this.route("new_user")})}();